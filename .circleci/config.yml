build_and_push: &build_and_push
  steps:
    - checkout
    - setup_remote_docker:
        version: 17.11.0-ce
    - run:
        name: Build Image
        command: |
          docker image build -t $DOCKER_REPO:$CIRCLE_BRANCH -f python$PY_VERSION/Dockerfile.$UBUNTU_VERSION .
    - run:
        name: Run Container
        command: |
          docker create -v /etc/ansible/roles/role_to_test --name repo alpine:3.7 /bin/true
          docker cp . repo:/etc/ansible/roles/role_to_test
          docker run --rm --volumes-from repo -d --name "ctest_${UBUNTU_VERSION}_${PY_VERSION}" $DOCKER_REPO:$CIRCLE_BRANCH
    - run:
        name: Run test
        command: docker exec -ti "ctest_${UBUNTU_VERSION}_${PY_VERSION}" cli all
    - run:
        name: Clean up
        command: docker stop "ctest_${UBUNTU_VERSION}_${PY_VERSION}"
    - run:
        name: Push to Docker Hub
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ] && [ -z "$CIRCLE_PULL_REQUEST" ]; then
            docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
            docker_file=python$PY_VERSION/Dockerfile.$UBUNTU_VERSION
            version=$(grep "LABEL version" $docker_file | cut -d "=" -f2 | tr -d '"')
            tag="${version}-${UBUNTU_VERSION}"

            docker tag $DOCKER_REPO:$CIRCLE_BRANCH $DOCKER_REPO:$tag
            docker push $DOCKER_REPO:$tag
            if [ "$PY_VERSION" == "3" ] && [ "$UBUNTU_VERSION" == "18.04" ]; then
              docker tag $DOCKER_REPO:$CIRCLE_BRANCH $DOCKER_REPO:latest
              docker push $DOCKER_REPO:latest
            fi
          fi

version: 2
jobs:
  py2-16.04:
    docker:
      - image: docker:18.06.0-ce-git
    environment:
      - DOCKER_REPO: thomasjpfan/ansible-ubuntu-local-runner
      - PY_VERSION: 2
      - UBUNTU_VERSION: 16.04
    <<: *build_and_push
  py2-18.04:
    docker:
      - image: docker:18.06.0-ce-git
    environment:
      - DOCKER_REPO: thomasjpfan/ansible-ubuntu-local-runner
      - PY_VERSION: 2
      - UBUNTU_VERSION: 18.04
    <<: *build_and_push
  py3-16.04:
    docker:
      - image: docker:18.06.0-ce-git
    environment:
      - DOCKER_REPO: thomasjpfan/ansible-ubuntu-local-runner
      - PY_VERSION: 3
      - UBUNTU_VERSION: 16.04
    <<: *build_and_push
  py3-18.04:
    docker:
      - image: docker:18.06.0-ce-git
    environment:
      - DOCKER_REPO: thomasjpfan/ansible-ubuntu-local-runner
      - PY_VERSION: 3
      - UBUNTU_VERSION: 18.04
    <<: *build_and_push


workflows:
  version: 2
  build-both:
    jobs:
      - py2-16.04
      - py2-18.04
      - py3-16.04
      - py3-18.04

